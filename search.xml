<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python培训</title>
      <link href="/2022/06/30/python-pei-xun/"/>
      <url>/2022/06/30/python-pei-xun/</url>
      
        <content type="html"><![CDATA[<h1 id="python培训"><a href="#python培训" class="headerlink" title="python培训"></a>python培训</h1><h2 id="学习思想"><a href="#学习思想" class="headerlink" title="学习思想"></a>学习思想</h2><p>学习20%的关键技术解决80%的问题</p><p>90%，60%，30%（重要的原则）</p><p>学习，模仿，<code>创新</code></p><p>敏捷开发</p><p>学会找组件，避免重复造轮子</p><p>业务场景的思考方法，从业务场景中提取业务需求，技术需求</p><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><ul><li>python3.6.8</li><li>nodejs 14.x</li><li>VScode</li><li>MariaDB</li><li>Navicat Premium 15</li></ul><h2 id="python历史"><a href="#python历史" class="headerlink" title="python历史"></a>python历史</h2><p>解释型、面向对象、动态数据类型的高级程序设计语言</p><h2 id="主要技术场景"><a href="#主要技术场景" class="headerlink" title="主要技术场景"></a>主要技术场景</h2><ul><li>人工智能 机器学习（sklearn）+深度学习（tensorflow2，paddlepaddle）</li><li>自动化运维 psutil</li><li>金融量化以及金融量化框架等 tushare</li><li>数据分析领域</li><li>大数据领域spark</li><li>爬虫 selenium</li></ul><h2 id="业务产品"><a href="#业务产品" class="headerlink" title="业务产品"></a>业务产品</h2><p>大数据数据应用</p><ul><li>用户挖掘</li><li>流量使用情况</li><li><code>运维驾驶舱</code></li></ul><h2 id="基本语法学习"><a href="#基本语法学习" class="headerlink" title="基本语法学习"></a>基本语法学习</h2><ul><li><p>变量</p></li><li><p>面向过程</p><p>顺序，选择，循环</p></li><li><p>面向对象</p></li></ul><h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h2><p>MariaDB</p><p>修改4个地方，my.ini文件 端口和characters</p><p>进入bin文件夹，双击mysqld.exe</p><h2 id="回归，分类，聚类"><a href="#回归，分类，聚类" class="headerlink" title="回归，分类，聚类"></a>回归，分类，聚类</h2><p>回归：有监督学习的两大应用之一，产生连续的结果。</p><blockquote><p>例如向<strong>模型</strong>输入人的各种数据的训练样本，产生“输入一个人的数据，判断此人20年后今后的经济能力”的结果，结果是连续的，往往得到一条回归曲线。当输入自变量不同时，输出的因变量非离散分布（不仅仅是一条线性直线，多项曲线也是回归曲线）。</p></blockquote><p>分类：有监督学习的两大应用之一，产生离散的结果。</p><blockquote><p>例如向<strong>模型</strong>输入人的各种数据的训练样本，产生“输入一个人的数据，判断是否患有癌症”的结果，结果必定是离散的，只有<strong>“是”或“否”。（即有目标和标签，能判断目标特征是属于哪一个类型）</strong></p></blockquote><p>聚类：无监督学习的结果。聚类的结果将产生一组集合，集合中的对象与同集合中的对象彼此相似，与其他集合中的对象<strong>相异</strong>。</p><blockquote><p>没有标准参考的学生给书本分的类别，表示自己认为这些书可能是同一类别的（具体什么类别不知道，没有标签和目标，即不是判断书的好坏（目标，标签），只能凭借特征而分类）。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flask 小白白</title>
      <link href="/2022/03/27/flask-xiao-bai-bai/"/>
      <url>/2022/03/27/flask-xiao-bai-bai/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端大杂烩</title>
      <link href="/2021/07/29/qian-duan-da-za-hui/"/>
      <url>/2021/07/29/qian-duan-da-za-hui/</url>
      
        <content type="html"><![CDATA[<h1 id="前端大杂烩"><a href="#前端大杂烩" class="headerlink" title="前端大杂烩"></a>前端大杂烩</h1><ol><li><h3 id="如何判断数据类型"><a href="#如何判断数据类型" class="headerlink" title="如何判断数据类型"></a><strong>如何判断数据类型</strong></h3><ul><li>typeof，返回值格式为字符串类型</li><li>判断已知对象类型的方法： instanceof，instanceof 后面一定要是对象类型，并且大小写不能错</li><li>根据对象的constructor判断，alert(c.constructor === Array) ———-&gt; true</li><li>通用但很繁琐的方法： prototype，alert(Object.prototype.toString.call(a) === ‘[object String]’) ——-&gt; true;</li><li>无敌万能的方法：jquery.type()</li></ul></li><li><h3 id="js浏览器事件循环机制"><a href="#js浏览器事件循环机制" class="headerlink" title="js浏览器事件循环机制"></a><strong>js浏览器事件循环机制</strong></h3><ul><li><p><strong>浏览器执行线程</strong></p><p>浏览器是多进程的，浏览器每一个 tab 标签都代表一个独立的进程，其中浏览器渲染进程（浏览器内核）属于浏览器多进程中的一种，主要负责页面渲染，脚本执行，事件处理等<br>其包含的线程有：GUI 渲染线程（负责渲染页面，解析 HTML，CSS 构成 DOM 树）、JS 引擎线程、事件触发线程、定时器触发线程、http 请求线程等主要线程</p></li><li><p><strong>关于执行中的线程</strong></p><p><strong>主线程</strong>：也就是 js 引擎执行的线程，这个线程只有一个，页面渲染、函数处理都在这个主线程上执行。<br><strong>工作线程</strong>：也称幕后线程，这个线程可能存在于浏览器或js引擎内，与主线程是分开的，处理文件读取、网络请求等异步事件。</p><p>**任务队列( Event Queue )**：所有的任务可以分为同步任务和异步任务，同步任务，顾名思义，就是立即执行的任务，同步任务一般会直接进入到主线程中执行；而异步任务，就是异步执行的任务，比如ajax网络请求，setTimeout 定时函数等都属于异步任务，异步任务会通过任务队列的机制(先进先出的机制)来进行协调。</p></li><li><p><strong>同步和异步任务分别进入不同的执行环境，同步的进入主线程，即主执行栈，异步的进入任务队列。主线程内的任务执行完毕为空，会去任务队列读取对应的任务，推入主线程执行。 上述过程的不断重复就是我们说的 Event Loop (事件循环)。</strong></p></li><li><p><strong>宏任务主要包含：script( 整体代码)、setTimeout、setInterval、I/O、UI 交互事件、setImmediate(Node.js 环境)</strong></p></li><li><p><strong>微任务主要包含：Promise、MutaionObserver、process.nextTick(Node.js 环境)</strong></p><p>例题</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'script start'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) {</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'timeout1'</span>);</span><br><span class="line">}, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> {</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'promise1'</span>);</span><br><span class="line">    <span class="title function_">resolve</span>();</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'timeout2'</span>), <span class="number">10</span>);</span><br><span class="line">}).<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params"></span>) {</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'then1'</span>)</span><br><span class="line">})</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'script end'</span>);</span><br></pre></td></tr></tbody></table></figure><p>首先，事件循环从宏任务 (macrotask) 队列开始，最初始，宏任务队列中，只有一个 scrip t(整体代码)任务；当遇到任务源 (task source) 时，则会先分发任务到对应的任务队列中去。所以，就和上面例子类似，首先遇到了console.log，输出 script start； 接着往下走，遇到 setTimeout 任务源，将其分发到任务队列中去，记为 timeout1； 接着遇到 promise，new promise 中的代码立即执行，输出 promise1, 然后执行 resolve ,遇到 setTimeout ,将其分发到任务队列中去，记为 timemout2, 将其 then 分发到微任务队列中去，记为 then1； 接着遇到 console.log 代码，直接输出 script end 接着检查微任务队列，发现有个 then1 微任务，执行，输出then1 再检查微任务队列，发现已经清空，则开始检查宏任务队列，执行 timeout1,输出 timeout1； 接着执行 timeout2，输出 timeout2 至此，所有的都队列都已清空，执行完毕。其输出的顺序依次是：script start, promise1, script end, then1, timeout1, timeout2</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">test</span> () {</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'start'</span>)</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> {</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'children2'</span>)</span><br><span class="line">        <span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> {<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'children2-1'</span>)})</span><br><span class="line">    }, <span class="number">0</span>)</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> {</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'children3'</span>)</span><br><span class="line">        <span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> {<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'children3-1'</span>)})</span><br><span class="line">    }, <span class="number">0</span>)</span><br><span class="line">    <span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> {<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'children1'</span>)})</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'end'</span>) </span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="title function_">test</span>()</span><br></pre></td></tr></tbody></table></figure><p>start,end,children1,children2,children2-1,children3,children3-1</p></li></ul></li><li><h3 id="js事件委托"><a href="#js事件委托" class="headerlink" title="js事件委托"></a><strong>js事件委托</strong></h3><ul><li><p><strong>基本概念</strong></p><p>事件委托，通俗地来讲，就是把一个元素响应事件（click、keydown……）的函数委托到另一个元素；</p><p>举个例子，比如一个宿舍的同学同时快递到了，一种方法就是他们都傻傻地一个个去领取，还有一种方法就是把这件事情委托给宿舍长，让一个人出去拿好所有快递，然后再根据收件人一一分发给每个宿舍同学；</p><p>在这里，取快递就是一个事件，每个同学指的是需要响应事件的 DOM 元素，而出去统一领取快递的宿舍长就是代理的元素，所以真正绑定事件的是这个元素，按照收件人分发快递的过程就是在事件执行中，需要判断当前响应的事件应该匹配到被代理元素中的哪一个或者哪几个。</p></li><li><p><strong>委托的优点</strong></p><ol><li>减少内存消耗</li><li>动态绑定事件</li></ol></li></ul></li><li><h3 id="深复制和浅复制"><a href="#深复制和浅复制" class="headerlink" title="深复制和浅复制"></a><strong>深复制和浅复制</strong></h3><p><strong>引用数据类型–名存在栈内存中，值存在于堆内存中，但是栈内存会提供一个引用的地址指向堆内存中的值</strong></p><p>当b=a进行拷贝时，其实复制的是a的引用地址，而并非堆里面的值。而当我们<strong>a[0]=1</strong>时进行数组修改时，由于a与b指向的是同一个地址，所以自然b也受了影响，这就是所谓的浅拷贝了。</p><p><strong>实现简单的深拷贝</strong></p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">deepClone</span>(<span class="params">obj</span>){</span><br><span class="line">    <span class="keyword">let</span> objClone = <span class="title class_">Array</span>.<span class="title function_">isArray</span>(obj)?[]:{};</span><br><span class="line">    <span class="keyword">if</span>(obj &amp;&amp; <span class="keyword">typeof</span> obj===<span class="string">"object"</span>){</span><br><span class="line">        <span class="keyword">for</span>(key <span class="keyword">in</span> obj){</span><br><span class="line">            <span class="keyword">if</span>(obj.<span class="title function_">hasOwnProperty</span>(key)){</span><br><span class="line">                <span class="comment">//判断ojb子元素是否为对象，如果是，递归复制</span></span><br><span class="line">                <span class="keyword">if</span>(obj[key]&amp;&amp;<span class="keyword">typeof</span> obj[key] ===<span class="string">"object"</span>){</span><br><span class="line">                    objClone[key] = <span class="title function_">deepClone</span>(obj[key]);</span><br><span class="line">                }<span class="keyword">else</span>{</span><br><span class="line">                    <span class="comment">//如果不是，简单复制</span></span><br><span class="line">                    objClone[key] = obj[key];</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> objClone;</span><br><span class="line">}    </span><br><span class="line"><span class="keyword">let</span> a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],</span><br><span class="line"><span class="keyword">let</span> b=<span class="title function_">deepClone</span>(a);</span><br><span class="line">a[<span class="number">0</span>]=<span class="number">2</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a,b);</span><br></pre></td></tr></tbody></table></figure><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">deepClone</span>(<span class="params">obj</span>){</span><br><span class="line">    <span class="keyword">let</span> _obj = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj),</span><br><span class="line">    <span class="keyword">let</span> objClone = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(_obj);</span><br><span class="line">    <span class="keyword">return</span> objClone</span><br><span class="line">}    </span><br><span class="line"><span class="keyword">let</span> a=[<span class="number">0</span>,<span class="number">1</span>,[<span class="number">2</span>,<span class="number">3</span>],<span class="number">4</span>],</span><br><span class="line"><span class="keyword">let</span> b=<span class="title function_">deepClone</span>(a);</span><br><span class="line">a[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">a[<span class="number">2</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a,b);</span><br></pre></td></tr></tbody></table></figure><p><strong>除了上面两种方法之外，我们还可以借用JQ的extend方法。</strong></p><p>***$*.extend( [deep ], target, object1 [, objectN ] )**</p><p><strong>deep</strong>表示是否深拷贝，为true为深拷贝，为false，则为浅拷贝</p><p><strong>target</strong> <strong>Object</strong>类型 目标对象，其他对象的成员属性将被附加到该对象上。</p><p><strong>object1 objectN</strong>可选。 Object类型 第一个以及第N个被合并的对象。 </p></li><li><h3 id="let、var、const-的区别"><a href="#let、var、const-的区别" class="headerlink" title="let、var、const 的区别"></a><strong>let、var、const 的区别</strong></h3><ul><li><p><strong>var</strong></p><p>var定义的变量可以修改，如果不初始化会输出undefined，不会报错。var 声明全局变量，换句话理解就是，声明在for循环中的变量，跳出for循环同样可以使用。</p></li><li><p><strong>let</strong></p><p>同一个变量，不可在声明之前调用，必须先定义再使用，否则会报错，循环体中可以用let。let是块级作用域，函数内部使用let定义后，对函数外部无影响。并且let不能定义同名变量，否则会报错。</p><p><strong>注意：必须声明<code>'use strict';</code>后才能使用<code>let</code>声明变量</strong>否则浏览并不能显示结果</p></li><li><p><strong>const</strong></p><p>用于声明常量，也具有块级作用域 ，也可声明块级。const定义的变量不可以修改，而且必须初始化。<strong>它和let一样，也不能重复定义同一个变量，const一旦定义，无法修改.</strong></p></li></ul></li><li><h3 id="JS-中变量的存储方式"><a href="#JS-中变量的存储方式" class="headerlink" title="JS 中变量的存储方式"></a><strong>JS 中变量的存储方式</strong></h3><ul><li><strong>栈内存</strong><ul><li>基本数据类型的值直接在栈内存中存储；</li><li>值与值之间是独立存在的，修改一个变量不会影响其他变量；</li><li>当比较两个基本数据类型的值时，就是比较值；</li></ul></li><li><strong>堆内存</strong><ul><li>对象（引用数据类型）是保存到堆内存中的，每创建一个新的对象，就会在堆内存中开辟一个新的空间；</li><li>而变量保存的是对象的内存地址（对象的引用）,如果两个变量保存的是同一个对象引用，当一个变量修改属性是，另一个也会受到影响；</li><li>当清空一个变量的值时，只是断开该变量与对象的联系，另一个对象并不受影响</li><li>当比较两个引用数据类型时，比较的是对象的内存地址；</li></ul></li></ul></li><li><h3 id="this-的指向，箭头函数中-this-的指向"><a href="#this-的指向，箭头函数中-this-的指向" class="headerlink" title="this 的指向，箭头函数中 this 的指向"></a><strong>this 的指向，箭头函数中 this 的指向</strong></h3><ul><li><p><strong>全局环境下</strong></p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">document</span> === <span class="variable language_">document</span>); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在浏览器中，全局对象为 window 对象：</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span> === <span class="variable language_">window</span>); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">a</span> = <span class="number">37</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">a</span>); <span class="comment">// 37</span></span><br></pre></td></tr></tbody></table></figure></li><li><p><strong>函数上下文调用</strong></p><p>函数直接调用</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//非严格模式下，this 默认指向全局对象window</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f1</span>(<span class="params"></span>){</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="title function_">f1</span>() === <span class="variable language_">window</span>; <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//而严格模式下， this为undefined</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f2</span>(<span class="params"></span>){</span><br><span class="line">  <span class="string">"use strict"</span>; <span class="comment">// 这里是严格模式</span></span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="title function_">f2</span>() === <span class="literal">undefined</span>; <span class="comment">// true</span></span><br></pre></td></tr></tbody></table></figure><p>对象中的this</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1</span></span><br><span class="line"><span class="keyword">var</span> o = {</span><br><span class="line">  <span class="attr">prop</span>: <span class="number">37</span>,</span><br><span class="line">  <span class="attr">f</span>: <span class="keyword">function</span>(<span class="params"></span>) {</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">prop</span>;</span><br><span class="line">  }</span><br><span class="line">};</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o.<span class="title function_">f</span>());  <span class="comment">//37</span></span><br><span class="line"><span class="keyword">var</span> a = o.<span class="property">f</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">a</span>()):  <span class="comment">//undefined</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> o = {<span class="attr">prop</span>: <span class="number">37</span>};</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">independent</span>(<span class="params"></span>) {</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">prop</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">o.<span class="property">f</span> = independent;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o.<span class="title function_">f</span>()); <span class="comment">// logs 37</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2</span></span><br><span class="line">o.<span class="property">b</span> = {</span><br><span class="line">  <span class="attr">g</span>: independent,</span><br><span class="line">  <span class="attr">prop</span>: <span class="number">42</span></span><br><span class="line">};</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o.<span class="property">b</span>.<span class="title function_">g</span>()); <span class="comment">// logs 42</span></span><br></pre></td></tr></tbody></table></figure><p>原型链中this</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> o = {</span><br><span class="line">  f : <span class="keyword">function</span>(<span class="params"></span>){ </span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">a</span> + <span class="variable language_">this</span>.<span class="property">b</span>; </span><br><span class="line">  }</span><br><span class="line">};</span><br><span class="line"><span class="keyword">var</span> p = <span class="title class_">Object</span>.<span class="title function_">create</span>(o);</span><br><span class="line">p.<span class="property">a</span> = <span class="number">1</span>;</span><br><span class="line">p.<span class="property">b</span> = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="title function_">f</span>()); <span class="comment">// 5</span></span><br><span class="line"><span class="comment">//谁调用指向谁</span></span><br></pre></td></tr></tbody></table></figure><p>构造函数中this</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">C</span>(<span class="params"></span>){</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">a</span> = <span class="number">37</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> o = <span class="keyword">new</span> <span class="title function_">C</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o.<span class="property">a</span>); <span class="comment">// logs 37</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">C2</span>(<span class="params"></span>){</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">a</span> = <span class="number">37</span>;</span><br><span class="line">  <span class="keyword">return</span> {<span class="attr">a</span>:<span class="number">38</span>};</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> b = <span class="keyword">new</span> <span class="title function_">C2</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b.<span class="property">a</span>); <span class="comment">// logs 38</span></span><br></pre></td></tr></tbody></table></figure><p>call &amp; apply</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">c, d</span>){</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">a</span> + <span class="variable language_">this</span>.<span class="property">b</span> + c + d;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> o = {<span class="attr">a</span>:<span class="number">1</span>, <span class="attr">b</span>:<span class="number">3</span>};</span><br><span class="line"></span><br><span class="line">add.<span class="title function_">call</span>(o, <span class="number">5</span>, <span class="number">7</span>); <span class="comment">// 1 + 3 + 5 + 7 = 16</span></span><br><span class="line"></span><br><span class="line">add.<span class="title function_">apply</span>(o, [<span class="number">10</span>, <span class="number">20</span>]); <span class="comment">// 1 + 3 + 10 + 20 = 34</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">tt</span>(<span class="params"></span>) {</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">}</span><br><span class="line"><span class="comment">// 返回对象见下图（图1）</span></span><br><span class="line">tt.<span class="title function_">call</span>(<span class="number">5</span>);  <span class="comment">// Number {[[PrimitiveValue]]: 5} </span></span><br><span class="line">tt.<span class="title function_">call</span>(<span class="string">'asd'</span>); <span class="comment">// String {0: "a", 1: "s", 2: "d", length: 3, [[PrimitiveValue]]: "asd"}</span></span><br></pre></td></tr></tbody></table></figure><p>bind 方法</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>){</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">a</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> g = f.<span class="title function_">bind</span>({<span class="attr">a</span>:<span class="string">"azerty"</span>});</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">g</span>()); <span class="comment">// azerty</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> o = {<span class="attr">a</span>:<span class="number">37</span>, <span class="attr">f</span>:f, <span class="attr">g</span>:g};</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o.<span class="title function_">f</span>(), o.<span class="title function_">g</span>()); <span class="comment">// 37, azerty</span></span><br></pre></td></tr></tbody></table></figure></li><li><p><strong>DOM 事件处理函数中的 this &amp; 内联事件中的 this</strong></p><p>DOM事件处理函数</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 被调用时，将关联的元素变成蓝色</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">bluify</span>(<span class="params">e</span>){</span><br><span class="line">      <span class="comment">//在控制台打印出所点击元素</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">      <span class="comment">//阻止时间冒泡</span></span><br><span class="line">      e.<span class="title function_">stopPropagation</span>();</span><br><span class="line">      <span class="comment">//阻止元素的默认事件</span></span><br><span class="line">      e.<span class="title function_">preventDefault</span>();      </span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">'#A5D9F3'</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取文档中的所有元素的列表</span></span><br><span class="line">    <span class="keyword">var</span> elements = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">'*'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将bluify作为元素的点击监听函数，当元素被点击时，就会变成蓝色</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span> ; i&lt;elements.<span class="property">length</span> ; i++){</span><br><span class="line">      elements[i].<span class="title function_">addEventListener</span>(<span class="string">'click'</span>, bluify, <span class="literal">false</span>);</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p>内联事件</p><ol><li>当代码被内联处理函数调用时，它的this指向监听器所在的DOM元素</li><li>当代码被包括在函数内部执行时，其this指向等同于 <strong><strong>函数直接调用</strong></strong>的情况，即在非严格模式指向全局对象window， 在严格模式指向undefined</li></ol></li><li><p><strong>setTimeout &amp; setInterval</strong></p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//默认情况下代码</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) {  </span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = <span class="number">0</span>;  </span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) {</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">    }, <span class="number">3000</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>();<span class="comment">//3秒后返回 window 对象</span></span><br><span class="line">==============================================</span><br><span class="line"><span class="comment">//通过bind绑定</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) {  </span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = <span class="number">0</span>;  </span><br><span class="line">    <span class="built_in">setTimeout</span>((<span class="keyword">function</span>(<span class="params"></span>) {</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">    }).<span class="title function_">bind</span>(<span class="variable language_">this</span>), <span class="number">3000</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>();<span class="comment">//3秒后返回构造函数新生成的对象 Person{...}</span></span><br></pre></td></tr></tbody></table></figure></li><li><p><strong>箭头函数中的 this</strong></p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) {  </span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = <span class="number">0</span>;  </span><br><span class="line">    <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> {</span><br><span class="line">        <span class="comment">// 回调里面的 `this` 变量就指向了期望的那个对象了</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span>++;</span><br><span class="line">    }, <span class="number">3000</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> adder = {</span><br><span class="line">  base : <span class="number">1</span>,</span><br><span class="line">    </span><br><span class="line">  add : <span class="keyword">function</span>(<span class="params">a</span>) {</span><br><span class="line">    <span class="keyword">var</span> <span class="title function_">f</span> = v =&gt; v + <span class="variable language_">this</span>.<span class="property">base</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">f</span>(a);</span><br><span class="line">  },</span><br><span class="line"></span><br><span class="line">  <span class="attr">addThruCall</span>: <span class="keyword">function</span> <span class="title function_">inFun</span>(<span class="params">a</span>) {</span><br><span class="line">    <span class="keyword">var</span> <span class="title function_">f</span> = v =&gt; v + <span class="variable language_">this</span>.<span class="property">base</span>;</span><br><span class="line">    <span class="keyword">var</span> b = {</span><br><span class="line">      base : <span class="number">2</span></span><br><span class="line">    };</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">return</span> f.<span class="title function_">call</span>(b, a);</span><br><span class="line">  }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(adder.<span class="title function_">add</span>(<span class="number">1</span>));         <span class="comment">// 输出 2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(adder.<span class="title function_">addThruCall</span>(<span class="number">1</span>)); <span class="comment">// 仍然输出 2（而不是3，其内部的this并没有因为call() 而改变，其this值仍然为函数inFun的this值，指向对象adder</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title function_">f</span> = (<span class="params"></span>) =&gt; {<span class="string">'use strict'</span>; <span class="keyword">return</span> <span class="variable language_">this</span>};</span><br><span class="line"><span class="keyword">var</span> <span class="title function_">p</span> = (<span class="params"></span>) =&gt; { <span class="keyword">return</span> <span class="variable language_">this</span>};</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>,<span class="title function_">f</span>() === <span class="variable language_">window</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>,<span class="title function_">f</span>() === <span class="title function_">p</span>());</span><br><span class="line"><span class="comment">//1 true</span></span><br><span class="line"><span class="comment">//2 true</span></span><br></pre></td></tr></tbody></table></figure><p>以上的箭头函数都是在方法内部，总之都是以非方法的方式使用，如果将箭头函数当做一个方法使用会怎样呢？作为方法的箭头函数this指向全局window对象，而普通函数则指向调用它的对象。</p></li></ul></li><li><h3 id="可以使用-new-一个箭头函数么？"><a href="#可以使用-new-一个箭头函数么？" class="headerlink" title="可以使用 new 一个箭头函数么？"></a><strong>可以使用 new 一个箭头函数么？</strong></h3><p>箭头函数没有prototype也没有自己的this指向并且不可以使用arguments。</p></li><li><h3 id="箭头函数和普通函数有什么区别"><a href="#箭头函数和普通函数有什么区别" class="headerlink" title="箭头函数和普通函数有什么区别"></a><strong>箭头函数和普通函数有什么区别</strong></h3><ul><li>语法更加简洁、清晰</li><li>箭头函数不会创建自己的 <code>this</code></li><li>箭头函数继承而来的 <code>this</code> 指向永远不变</li><li>.call()/.apply()/.bind() 无法改变箭头函数中 <code>this</code> 的指向</li><li>箭头函数没有原型 <code>prototype</code></li><li>箭头函数不能作为构造函数使用，不能用 <code>new</code></li><li>箭头函数没有自己的 <code>arguments</code></li></ul></li><li><h3 id="new-的实现"><a href="#new-的实现" class="headerlink" title="new 的实现"></a><strong>new 的实现</strong></h3><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">create</span> () {</span><br><span class="line">    <span class="comment">// 创建一个空对象</span></span><br><span class="line">    <span class="keyword">let</span> obj = <span class="keyword">new</span> <span class="title class_">Object</span>()</span><br><span class="line">    <span class="comment">// 获取构造函数</span></span><br><span class="line">    <span class="keyword">let</span> <span class="title class_">Con</span> = [].<span class="property">shift</span>.<span class="title function_">call</span>(<span class="variable language_">arguments</span>)</span><br><span class="line">    <span class="comment">// 将对象（实例）的 __proto__ 和构造函数的 prototype 绑定</span></span><br><span class="line">    obj.<span class="property">__proto__</span> = <span class="title class_">Con</span>.<span class="property"><span class="keyword">prototype</span></span></span><br><span class="line">    <span class="comment">// 绑定this，以及参数</span></span><br><span class="line">    <span class="keyword">let</span> result = <span class="title class_">Con</span>.<span class="title function_">apply</span>(obj, <span class="variable language_">arguments</span>);</span><br><span class="line">    <span class="comment">// 确保返回的是对象</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">typeof</span> result === <span class="string">'object'</span>? result : obj;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name</span>) {</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">say</span> = <span class="keyword">function</span> (<span class="params"></span>) {</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">'name = '</span> + <span class="variable language_">this</span>.<span class="property">name</span>)</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> person = <span class="title function_">create</span>(<span class="title class_">Person</span>,<span class="string">'a'</span>)</span><br></pre></td></tr></tbody></table></figure></li><li><h3 id="instanceof-的原理"><a href="#instanceof-的原理" class="headerlink" title="instanceof 的原理"></a><strong>instanceof 的原理</strong></h3><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">new_instance_of</span>(<span class="params">leftVaule, rightVaule</span>) { </span><br><span class="line">    <span class="keyword">let</span> rightProto = rightVaule.<span class="property"><span class="keyword">prototype</span></span>; <span class="comment">// 取右表达式的 prototype 值</span></span><br><span class="line">    leftVaule = leftVaule.<span class="property">__proto__</span>; <span class="comment">// 取左表达式的__proto__值</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) {</span><br><span class="line">     <span class="keyword">if</span> (leftVaule === <span class="literal">null</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (leftVaule === rightProto) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">        } </span><br><span class="line">        leftVaule = leftVaule.<span class="property">__proto__</span> </span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h3 id="cookie、localStorage-和-sessionStorage-的区别"><a href="#cookie、localStorage-和-sessionStorage-的区别" class="headerlink" title="cookie、localStorage 和 sessionStorage 的区别"></a><strong>cookie、localStorage 和 sessionStorage 的区别</strong></h3><ul><li><h4 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h4><p>Cookie 是小甜饼的意思。顾名思义，cookie 确实非常小，它的大小限制为4KB左右。它的主要用途有保存登录信息，比如你登录某个网站市场可以看到“记住密码”，这通常就是通过在 Cookie 中存入一段辨别用户身份的数据来实现的。</p></li><li><h4 id="localStorage"><a href="#localStorage" class="headerlink" title="localStorage"></a>localStorage</h4><p>localStorage 是 HTML5 标准中新加入的技术，它并不是什么划时代的新东西。早在 IE 6 时代，就有一个叫 userData 的东西用于本地存储，而当时考虑到浏览器兼容性，更通用的方案是使用 Flash。而如今，localStorage 被大多数浏览器所支持，如果你的网站需要支持 IE6+，那以 userData 作为你的 polyfill 的方案是种不错的选择。</p></li><li><h4 id="sessionStorage"><a href="#sessionStorage" class="headerlink" title="sessionStorage"></a>sessionStorage</h4><p>sessionStorage 与 localStorage 的接口类似，但保存数据的生命周期与 localStorage 不同。做过后端开发的同学应该知道 Session 这个词的意思，直译过来是“会话”。而 sessionStorage 是一个前端的概念，它只是可以将一部分数据在当前会话中保存下来，刷新页面数据依旧存在。但当页面关闭后，sessionStorage 中的数据就会被清空。</p></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> css </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Python爬取厚生劳动省派遣公司数据</title>
      <link href="/2021/07/02/yong-python-pa-qu-hou-sheng-lao-dong-sheng-pai-qian-gong-si-shu-ju/"/>
      <url>/2021/07/02/yong-python-pa-qu-hou-sheng-lao-dong-sheng-pai-qian-gong-si-shu-ju/</url>
      
        <content type="html"><![CDATA[<h1 id="用Python爬取厚生劳动省派遣公司数据"><a href="#用Python爬取厚生劳动省派遣公司数据" class="headerlink" title="用Python爬取厚生劳动省派遣公司数据"></a>用Python爬取厚生劳动省派遣公司数据</h1><h2 id="一、爬虫前的准备"><a href="#一、爬虫前的准备" class="headerlink" title="一、爬虫前的准备"></a>一、爬虫前的准备</h2><p>需要的技术知识</p><ul><li>js、html</li><li>Python</li><li>抓包</li><li>BeautifulSoup</li></ul><p>厚生劳动省的查询网站：<a href="https://jinzai.hellowork.mhlw.go.jp/JinzaiWeb/GICB102010.do">https://jinzai.hellowork.mhlw.go.jp/JinzaiWeb/GICB102010.do</a></p><h2 id="二、分析数据传输"><a href="#二、分析数据传输" class="headerlink" title="二、分析数据传输"></a>二、分析数据传输</h2><p>我们可以看到网站中有一系列筛选条件，我主要关注的是东京地区的公司，所以这里只对东京进行分析，其他的条件自行修改参数即可。我们按F12浏览器开发者模式，进入Network标签页，在页面上选择东京，点击检索。</p><p><img src="https://i.loli.net/2021/07/02/nihXtIgFCA6zVkG.png" alt="检索"></p><p>我们可以观察到Network的变化，其中GICB102010.do就是我们需要的</p><p><img src="https://i.loli.net/2021/07/02/H3ArwghYXf7VmCj.png" alt="抓包"></p><p>点击查看详情，在Headers部分可以看到它的一些基本信息，包括响应头、请求头和请求体等。</p><p><img src="https://i.loli.net/2021/07/02/O4rg5oPtdbHSJTC.png" alt="网络传输数据"></p><p><img src="https://i.loli.net/2021/07/02/9WSYwoGfvcAlmgB.png" alt="请求体参数数据"><br>这里的action参数，我们检索的时候为“search”，分页的时候为“page”。</p><p>接下来我们将用到图片中的数据进行网页信息的获取</p><h2 id="三、利用PostJson测试能否获取网页信息"><a href="#三、利用PostJson测试能否获取网页信息" class="headerlink" title="三、利用PostJson测试能否获取网页信息"></a>三、利用PostJson测试能否获取网页信息</h2><p>PostJson网址：<a href="http://coolaf.com/tool/post">http://coolaf.com/tool/post</a></p><p>我们将第二步获取的数据填入对应的模块中，它这里用的是Post传参，通过表单进行提交，application/x-www-form-urlencoded，在PostJson中我们选择x-www-form-urlencoded，Cookie选择AREA，输入Cookie，也就是第二步请求头中的Cookies，Headers对应第二步请求头的信息。</p><p><img src="https://i.loli.net/2021/07/02/MBt9PTVsaUwq6kf.png" alt="PostJson"></p><p>点击提交，可以看到，它返回了网站的源代码，效果和我们在查询页面右键点击查看网页源代码一样。</p><h2 id="四、分析网页"><a href="#四、分析网页" class="headerlink" title="四、分析网页"></a>四、分析网页</h2><p><img src="https://i.loli.net/2021/07/02/8kCV7IYUGBrAtWn.png" alt="公司信息表"></p><p>可以看到，总共有12519家公司，而这里采取的分页查询，所以之后我们在进行代码编写的时候，要动态的改变页码参数去循环获取每页的数据。图中表格中的内容就是我们需要的公司信息，右键查看网页源代码。我们找到表格的部分，发现这个表格的id=‘search’，除去第一个为表头，每个公司都在这个表格中占一个。</p><h2 id="五、代码编写"><a href="#五、代码编写" class="headerlink" title="五、代码编写"></a>五、代码编写</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="comment">#全局变量</span></span><br><span class="line">Num = <span class="number">0</span></span><br><span class="line"><span class="comment">#获取网站信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getHTMLText</span>(<span class="params">url,page</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment">#访问网站需要的数据参数</span></span><br><span class="line">        data = {</span><br><span class="line">            <span class="string">'params'</span>:page,</span><br><span class="line">            <span class="string">'hfCond'</span>:<span class="string">'3mLVm+1L2TF3qSHhXVWLKO2UWAiGJtJ7tzx5ZHVkjZss7jxUSh1jh0ECe+YsZSuzlTMpAfvEs/stliWTLD/MP/D1zphgZT7Fyfpuc5N32Tw='</span>,</span><br><span class="line">            <span class="string">'curPage'</span>:<span class="string">'1'</span>,</span><br><span class="line">            <span class="string">'cbTokyo'</span>:<span class="string">'1'</span>,</span><br><span class="line">            <span class="string">'ucKyokatodokedeNo1'</span>: <span class="string">''</span>,</span><br><span class="line">            <span class="string">'txtKyokatodokedeNo2'</span>: <span class="string">''</span>,</span><br><span class="line">            <span class="string">'txtKyokatodokedeNo3'</span>: <span class="string">''</span>,</span><br><span class="line">            <span class="comment"># 'nm_btnSearch.x': '88',</span></span><br><span class="line">            <span class="comment"># 'nm_btnSearch.y': '26',</span></span><br><span class="line">            <span class="string">'hfJigyoshoRegKbn'</span>: <span class="string">'0'</span>,</span><br><span class="line">            <span class="string">'hfScrollTop'</span>: <span class="string">'1500'</span>,</span><br><span class="line">            <span class="string">'screenId'</span>: <span class="string">'GICB102010'</span>,</span><br><span class="line">            <span class="string">'action'</span>: <span class="string">'page'</span>,</span><br><span class="line">            <span class="string">'codeAssistType'</span>: <span class="string">''</span>,</span><br><span class="line">            <span class="string">'codeAssistKind'</span>: <span class="string">''</span>,</span><br><span class="line">            <span class="string">'codeAssistCode'</span>: <span class="string">''</span>,</span><br><span class="line">            <span class="string">'codeAssistItemCode'</span>: <span class="string">''</span>,</span><br><span class="line">            <span class="string">'codeAssistItemName'</span>: <span class="string">''</span>,</span><br><span class="line">            <span class="string">'codeAssistDivide'</span>: <span class="string">''</span>,</span><br><span class="line">            <span class="string">'maba_vrbs'</span>:<span class="string">''</span></span><br><span class="line">        }</span><br><span class="line">        <span class="comment">#头部协议</span></span><br><span class="line">        headers = {</span><br><span class="line">            <span class="string">'Accept'</span>:<span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'</span>,</span><br><span class="line">            <span class="string">'Accept-Encoding'</span>:<span class="string">'gzip, deflate, br'</span>,</span><br><span class="line">            <span class="string">'Accept-Language'</span>:<span class="string">'ja,en-US;q=0.9,en;q=0.8,zh-CN;q=0.7,zh;q=0.6'</span>,</span><br><span class="line">            <span class="string">'Cache-Control'</span>:<span class="string">'max-age=0'</span>,</span><br><span class="line">            <span class="string">'Connection'</span>:<span class="string">'keep-alive'</span>,</span><br><span class="line">            <span class="string">'Content-Length'</span>:<span class="string">'440'</span>,</span><br><span class="line">            <span class="string">'Content-Type'</span>:<span class="string">'application/x-www-form-urlencoded'</span>,</span><br><span class="line">            <span class="string">'Cookie'</span>:<span class="string">'JSESSIONID=tnokZeolLdfwYSKnpNpNT34yVuwNXF4W6o68yuN1Cs_mup_yrQai0Nfap8b-0EDR.ICB_001'</span></span><br><span class="line">        }</span><br><span class="line">        r = requests.post(url=url, data=data, headers=headers)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"><span class="comment">#循环进行分页操作获取数据</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_html</span>(<span class="params">url,fpath</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">626</span>):</span><br><span class="line">        page = i+<span class="number">1</span></span><br><span class="line">        html = getHTMLText(url, page)</span><br><span class="line">        getCompany(html,fpath)</span><br><span class="line"><span class="comment">#获取每页的公司信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getCompany</span>(<span class="params">html, fpath</span>):</span><br><span class="line">    <span class="keyword">global</span> Num</span><br><span class="line">    soup = BeautifulSoup(html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="comment">#找到公司信息的表格</span></span><br><span class="line">    table = soup.find(<span class="built_in">id</span>=<span class="string">'search'</span>)</span><br><span class="line">    <span class="comment">#除去表头，对每一行进行循环</span></span><br><span class="line">    <span class="keyword">for</span> tr <span class="keyword">in</span> table.find_all(<span class="string">'tr'</span>)[<span class="number">1</span>:]:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            infoDict = {}</span><br><span class="line">            infoDict[<span class="string">'Num'</span>] = Num</span><br><span class="line">            infoDict[<span class="string">'許可・受理番号'</span>] = tr.find(<span class="built_in">id</span>=<span class="string">'ID_lbKyokatodokedeNo'</span>).string</span><br><span class="line">            infoDict[<span class="string">'許可年月日・届出受理年月日'</span>] = tr.find(<span class="built_in">id</span>=<span class="string">'ID_lbKyokatodokedeDate'</span>).string</span><br><span class="line">            infoDict[<span class="string">'事業主名称'</span>] = tr.find(<span class="built_in">id</span>=<span class="string">'ID_lbJigyonushiName'</span>).string.replace(<span class="string">u'\u3000'</span>, <span class="string">u''</span>)</span><br><span class="line">            infoDict[<span class="string">'事業所名称'</span>] = tr.find(<span class="built_in">id</span>=<span class="string">'ID_lbJigyoshoName'</span>).string.replace(<span class="string">u'\u3000'</span>, <span class="string">u''</span>)</span><br><span class="line">            infoDict[<span class="string">'事業所所在地'</span>] = tr.find(<span class="built_in">id</span>=<span class="string">'ID_lbJigyoshoAddress'</span>).string.replace(<span class="string">u'\u3000'</span>, <span class="string">u''</span>)</span><br><span class="line">            infoDict[<span class="string">'電話番号'</span>] = tr.find(<span class="built_in">id</span>=<span class="string">'ID_lbTel'</span>).string</span><br><span class="line">            Num = Num + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> tr.find(<span class="built_in">id</span>=<span class="string">'ID_lbRyokinaveValue'</span>):</span><br><span class="line">                infoDict[<span class="string">'派遣料金の平均額'</span>] = <span class="string">''</span>.join(tr.find(<span class="built_in">id</span>=<span class="string">'ID_lbRyokinaveValue'</span>).parent.stripped_strings)</span><br><span class="line">            <span class="keyword">if</span> tr.find(<span class="built_in">id</span>=<span class="string">'ID_lbChinginaveValue'</span>):</span><br><span class="line">                infoDict[<span class="string">'派遣労働者の賃金の平均額'</span>] = <span class="string">''</span>.join(tr.find(<span class="built_in">id</span>=<span class="string">'ID_lbChinginaveValue'</span>).parent.stripped_strings)</span><br><span class="line">            <span class="keyword">if</span> tr.find(<span class="built_in">id</span>=<span class="string">'ID_lbPMargin'</span>):</span><br><span class="line">                infoDict[<span class="string">'マージン率'</span>] = <span class="string">''</span>.join(tr.find(<span class="built_in">id</span>=<span class="string">'ID_lbPMargin'</span>).parent.stripped_strings)</span><br><span class="line">            <span class="keyword">if</span> tr.find(<span class="built_in">id</span>=<span class="string">'ID_lbRoshikyoteiShuuki'</span>):</span><br><span class="line">                infoDict[<span class="string">'労使協定の締結'</span>] = <span class="string">''</span>.join(tr.find(<span class="built_in">id</span>=<span class="string">'ID_lbRoshikyoteiShuuki'</span>).parent.stripped_strings)</span><br><span class="line">            <span class="keyword">if</span> tr.find(<span class="built_in">id</span>=<span class="string">'ID_lbYuryou'</span>):</span><br><span class="line">                infoDict[<span class="string">'備考'</span>] = <span class="string">''</span>.join(tr.find(<span class="built_in">id</span>=<span class="string">'ID_lbYuryou'</span>).parent.stripped_strings)</span><br><span class="line">            <span class="built_in">print</span>(infoDict)</span><br><span class="line">            <span class="comment">#保存到文件中</span></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(fpath, <span class="string">'a'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(<span class="built_in">str</span>(infoDict) + <span class="string">'\n'</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment">#爬取的网站信息</span></span><br><span class="line">    url = <span class="string">'https://jinzai.hellowork.mhlw.go.jp/JinzaiWeb/GICB102010.do'</span></span><br><span class="line">    <span class="comment">#文件保存的地址</span></span><br><span class="line">    output_file = <span class="string">'D://python//data//info.txt'</span></span><br><span class="line">    get_html(url,output_file)</span><br><span class="line">main()</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> js </tag>
            
            <tag> Html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BigQuant代码锦集</title>
      <link href="/2021/06/25/bigquant-dai-ma-jin-ji/"/>
      <url>/2021/06/25/bigquant-dai-ma-jin-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="BigQuant代码锦集"><a href="#BigQuant代码锦集" class="headerlink" title="BigQuant代码锦集"></a>BigQuant代码锦集</h1><p> 这里是平常工作中会用到的一些常用的代码集合，不定时的更新❀</p><hr><h4 id="股票池中去除获取创业板代码"><a href="#股票池中去除获取创业板代码" class="headerlink" title="股票池中去除获取创业板代码"></a>股票池中去除获取创业板代码</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">all_ins = D.instruments(start_date=<span class="string">'2017-09-07'</span>,end_date=<span class="string">'2018-09-07'</span>)</span><br><span class="line"><span class="comment">#创业板代码一般以3开头</span></span><br><span class="line">ins = [k <span class="keyword">for</span> k <span class="keyword">in</span> all_ins <span class="keyword">if</span> k[<span class="number">0</span>]==<span class="string">'8'</span>]</span><br></pre></td></tr></tbody></table></figure><h4 id="求股票的真实价格"><a href="#求股票的真实价格" class="headerlink" title="求股票的真实价格"></a>求股票的真实价格</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">start = <span class="string">'2018-11-23'</span></span><br><span class="line">end = <span class="string">'2019-12-20'</span></span><br><span class="line">features_data = D.features(D.instruments(start, end), start, end, [<span class="string">'close_0'</span>,<span class="string">'close_1'</span>,<span class="string">'close_2'</span>,<span class="string">'volume_0'</span>,<span class="string">'industry_sw_level1_0'</span>,<span class="string">'daily_return_0'</span>,<span class="string">'adjust_factor_0'</span>])</span><br><span class="line">features_data = features_data[features_data[<span class="string">'instrument'</span>]==<span class="string">'002679.SZA'</span>]</span><br><span class="line"><span class="comment"># features_data['date'] = pd.to_datetime(features_data['date']) #将数据类型转换为日期类型</span></span><br><span class="line">features_data = features_data.set_index(<span class="string">'date'</span>) <span class="comment"># 将date设置为index</span></span><br><span class="line">features_data = features_data.sort_values(<span class="string">'date'</span>)</span><br><span class="line"><span class="comment">#获取真实价格</span></span><br><span class="line">features_data[<span class="string">'close_0'</span>] /= features_data[<span class="string">'adjust_factor_0'</span>]</span><br><span class="line">features_data[<span class="string">'close_1'</span>] /= features_data[<span class="string">'adjust_factor_0'</span>]</span><br><span class="line">features_data[<span class="string">'close_2'</span>] /= features_data[<span class="string">'adjust_factor_0'</span>]</span><br></pre></td></tr></tbody></table></figure><h4 id="筛选申万行业一的数据"><a href="#筛选申万行业一的数据" class="headerlink" title="筛选申万行业一的数据"></a>筛选申万行业一的数据</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bar1d = DataSource(<span class="string">"bar1d_index_CN_STOCK_A"</span>).read(start_date=start,end_date=end)<span class="comment">#指数行情</span></span><br><span class="line">bar1d_sw = bar1d[bar1d.instrument.<span class="built_in">str</span>.contains(<span class="string">"SW"</span>)] <span class="comment"># 筛选出申万行业指数</span></span><br><span class="line">bar1d_sw[<span class="string">'code'</span>] = bar1d_sw[<span class="string">'instrument'</span>].apply(<span class="keyword">lambda</span> x: x.split(<span class="string">'.'</span>)[<span class="number">0</span>])</span><br><span class="line">basic_info_sw = DataSource(<span class="string">"basic_info_IndustrySw"</span>).read() <span class="comment"># 读取申万行业基本信息数据</span></span><br><span class="line">basic_info_sw[<span class="string">'code'</span>] = <span class="string">"SW"</span> + basic_info_sw[<span class="string">'code'</span>]</span><br><span class="line">df3 = bar1d_sw.merge(basic_info_sw, on=<span class="string">'code'</span>, how=<span class="string">'left'</span>)</span><br></pre></td></tr></tbody></table></figure><h4 id="展开全部行-x2F-列"><a href="#展开全部行-x2F-列" class="headerlink" title="展开全部行/列"></a>展开全部行/列</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pd.set_option(<span class="string">'display.max_columns'</span>, <span class="literal">None</span>)</span><br><span class="line">pd.set_option(<span class="string">'display.max_rows'</span>, <span class="literal">None</span>)</span><br></pre></td></tr></tbody></table></figure><h4 id="计算均值"><a href="#计算均值" class="headerlink" title="计算均值"></a>计算均值</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'mean_5'</span>] = df[<span class="string">'close'</span>].rolling(<span class="number">5</span>).mean()</span><br><span class="line">df[<span class="string">'mean_10'</span>] = df[<span class="string">'close'</span>].rolling(<span class="number">10</span>).mean()</span><br><span class="line">df[<span class="string">'mean_20'</span>] = df[<span class="string">'close'</span>].rolling(<span class="number">20</span>).mean()</span><br><span class="line">df[<span class="string">'mean_60'</span>] = df[<span class="string">'close'</span>].rolling(<span class="number">60</span>).mean()</span><br><span class="line">df[<span class="string">'mean_120'</span>] = df[<span class="string">'close'</span>].rolling(<span class="number">120</span>).mean()</span><br></pre></td></tr></tbody></table></figure><h4 id="计算角度"><a href="#计算角度" class="headerlink" title="计算角度"></a>计算角度</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'arctan_5'</span>] = np.arctan((df[<span class="string">'mean_5'</span>]/df[<span class="string">'mean_5'</span>].shift(<span class="number">1</span>)-<span class="number">1</span>)*<span class="number">100</span>)*<span class="number">180</span>/<span class="number">3.1416</span></span><br><span class="line">df[<span class="string">'arctan_10'</span>] = np.arctan((df[<span class="string">'mean_10'</span>]/df[<span class="string">'mean_10'</span>].shift(<span class="number">1</span>)-<span class="number">1</span>)*<span class="number">100</span>)*<span class="number">180</span>/<span class="number">3.1416</span></span><br><span class="line">df[<span class="string">'arctan_20'</span>] = np.arctan((df[<span class="string">'mean_20'</span>]/df[<span class="string">'mean_20'</span>].shift(<span class="number">1</span>)-<span class="number">1</span>)*<span class="number">100</span>)*<span class="number">180</span>/<span class="number">3.1416</span></span><br><span class="line">df[<span class="string">'arctan_60'</span>] = np.arctan((df[<span class="string">'mean_60'</span>]/df[<span class="string">'mean_60'</span>].shift(<span class="number">1</span>)-<span class="number">1</span>)*<span class="number">100</span>)*<span class="number">180</span>/<span class="number">3.1416</span></span><br><span class="line">df[<span class="string">'arctan_120'</span>] = np.arctan((df[<span class="string">'mean_120'</span>]/df[<span class="string">'mean_120'</span>].shift(<span class="number">1</span>)-<span class="number">1</span>)*<span class="number">100</span>)*<span class="number">180</span>/<span class="number">3.1416</span></span><br></pre></td></tr></tbody></table></figure><h4 id="计算振幅"><a href="#计算振幅" class="headerlink" title="计算振幅"></a>计算振幅</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'max_30'</span>] = df[<span class="string">'high'</span>].rolling(<span class="number">30</span>).<span class="built_in">max</span>()</span><br><span class="line">df[<span class="string">'min_30'</span>] = df[<span class="string">'low'</span>].rolling(<span class="number">30</span>).<span class="built_in">min</span>()</span><br><span class="line">df[<span class="string">'daily_30'</span>] = df[<span class="string">'max_30'</span>]/df[<span class="string">'min_30'</span>]-<span class="number">1</span></span><br></pre></td></tr></tbody></table></figure><h4 id="获取指数成分股股票代码"><a href="#获取指数成分股股票代码" class="headerlink" title="获取指数成分股股票代码"></a>获取指数成分股股票代码</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">date=<span class="string">'2017-05-23'</span></span><br><span class="line">df = D.history_data(D.instruments(date,date),date,date,fields=[<span class="string">'in_csi300'</span>])</span><br><span class="line">hs300 = <span class="built_in">set</span>(df[df[<span class="string">'in_csi300'</span>]==<span class="number">1</span>][<span class="string">'instrument'</span>])</span><br></pre></td></tr></tbody></table></figure><h4 id="禁用缓存"><a href="#禁用缓存" class="headerlink" title="禁用缓存"></a>禁用缓存</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m1 = M.cached.v2(run=foo1,kwargs=<span class="built_in">dict</span>(name=<span class="string">'quant'</span>),m_cached=<span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure><h4 id="获取板块名称列表"><a href="#获取板块名称列表" class="headerlink" title="获取板块名称列表"></a>获取板块名称列表</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">instruments = D.instruments()</span><br><span class="line">df = D.history_data(instruments,start_date=<span class="string">'2017-05-19'</span>,end_date=<span class="string">'2017-05-19'</span>,fields=[<span class="string">'concept'</span>])</span><br><span class="line"><span class="built_in">set</span>([y <span class="keyword">for</span> x <span class="keyword">in</span> df[<span class="string">'concept'</span>] <span class="keyword">if</span> x <span class="keyword">for</span> y <span class="keyword">in</span> x.split(<span class="string">';'</span>)])</span><br></pre></td></tr></tbody></table></figure><h4 id="获取指定板块数据"><a href="#获取指定板块数据" class="headerlink" title="获取指定板块数据"></a>获取指定板块数据</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">instruments = D.instruments()</span><br><span class="line">df = D.history_data(instruments,start_date=<span class="string">'2017-05-19'</span>,end_date=<span class="string">'2017-05-19'</span>,fields=[<span class="string">'concept'</span>])</span><br><span class="line">df[df[<span class="string">'concept'</span>].apply(<span class="keyword">lambda</span> x:<span class="string">'智能家居'</span> <span class="keyword">in</span> x.split(<span class="string">';'</span>) <span class="keyword">if</span> x <span class="keyword">else</span> <span class="literal">False</span>)]</span><br></pre></td></tr></tbody></table></figure><h4 id="回测交易"><a href="#回测交易" class="headerlink" title="回测交易"></a>回测交易</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 证券池：这里使用所有股票</span></span><br><span class="line">instruments = D.instruments()</span><br><span class="line"><span class="comment"># 起始日期</span></span><br><span class="line">start_date = <span class="string">'2018-06-01'</span></span><br><span class="line"><span class="comment"># 结束日期</span></span><br><span class="line">end_date = <span class="string">'2020-11-24'</span></span><br><span class="line"><span class="comment"># 初始资金</span></span><br><span class="line">capital_base = <span class="number">1000000</span></span><br><span class="line"><span class="comment"># 策略比较参考标准，以沪深300为例</span></span><br><span class="line">benchmark = <span class="string">'000300.INDX'</span></span><br><span class="line"><span class="comment"># 调仓周期（多少个交易日调仓）</span></span><br><span class="line">rebalance_period = <span class="number">1</span></span><br><span class="line">m = M.trade.v3(</span><br><span class="line">    instruments=instruments,</span><br><span class="line">    start_date=start_date,</span><br><span class="line">    end_date=end_date,</span><br><span class="line">    initialize=initialize,</span><br><span class="line">    handle_data=handle_data,</span><br><span class="line">    <span class="comment"># 买入订单以收盘价成交</span></span><br><span class="line">    order_price_field_buy=<span class="string">'close'</span>,</span><br><span class="line">    <span class="comment"># 卖出订单以开盘价成交</span></span><br><span class="line">    order_price_field_sell=<span class="string">'open'</span>,</span><br><span class="line"><span class="comment">#     price_type='真实价格',</span></span><br><span class="line">    capital_base=capital_base,</span><br><span class="line">    benchmark=benchmark,</span><br><span class="line">    <span class="comment"># 传入数据给回测模块，所有回测函数里用到的数据都要从这里传入，并通过 context.options 使用，否则可能会遇到缓存问题</span></span><br><span class="line">    options={<span class="string">'selected_data'</span>: selected_data, <span class="string">'rebalance_period'</span>: rebalance_period}</span><br><span class="line">)</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bigquant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>画展</title>
      <link href="/2021/06/25/hua-zhan/"/>
      <url>/2021/06/25/hua-zhan/</url>
      
        <content type="html"><![CDATA[<h1 id="画展"><a href="#画展" class="headerlink" title="画展"></a>画展</h1><hr><p>小白画手偶尔心血来潮的作品，时间按降序排序，喜欢的可以自取~</p><h2 id="2021年7月1日"><a href="#2021年7月1日" class="headerlink" title="2021年7月1日"></a>2021年7月1日</h2><p><img src="/2021/06/25/hua-zhan/lucky.jpg" alt="百事可爱"></p><h2 id="2021年6月30日"><a href="#2021年6月30日" class="headerlink" title="2021年6月30日"></a>2021年6月30日</h2><p><img src="https://i.loli.net/2021/07/02/Eh1qWPnbMjGacfx.jpg" alt="彩虹"></p><h2 id="2021年6月20日"><a href="#2021年6月20日" class="headerlink" title="2021年6月20日"></a>2021年6月20日</h2><p><img src="https://i.loli.net/2021/07/02/oV7bLAMy34WGcRx.jpg" alt="干杯！🍻"></p><h2 id="2021年6月12日"><a href="#2021年6月12日" class="headerlink" title="2021年6月12日"></a>2021年6月12日</h2><p><img src="https://i.loli.net/2021/07/02/PT7e54YQdyoql3t.jpg" alt="万事顺“荔”"></p><h2 id="2021年5月23日"><a href="#2021年5月23日" class="headerlink" title="2021年5月23日"></a>2021年5月23日</h2><p><img src="https://i.loli.net/2021/06/25/SXfycNaFwrM17UP.jpg" alt="スイカ！🍉"></p><h2 id="2021年4月15日"><a href="#2021年4月15日" class="headerlink" title="2021年4月15日"></a>2021年4月15日</h2><p><img src="https://i.loli.net/2021/07/02/GOp8snXZmzVQJM1.jpg" alt="午后"></p><h2 id="2021年2月10日"><a href="#2021年2月10日" class="headerlink" title="2021年2月10日"></a>2021年2月10日</h2><p><img src="https://i.loli.net/2021/07/02/EtmoKp1bZqaw9vY.jpg" alt="冰淇淋！🍦"></p><h2 id="2020年12月1日"><a href="#2020年12月1日" class="headerlink" title="2020年12月1日"></a>2020年12月1日</h2><p><img src="https://i.loli.net/2021/07/02/lxjA3zuOaJi41W5.jpg" alt="月亮！🌙"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android平台整合H5WebApp，集成企业微信SDK</title>
      <link href="/2021/01/22/android-ping-tai-zheng-he-h5webapp-ji-cheng-qi-ye-wei-xin-sdk/"/>
      <url>/2021/01/22/android-ping-tai-zheng-he-h5webapp-ji-cheng-qi-ye-wei-xin-sdk/</url>
      
        <content type="html"><![CDATA[<h1 id="Android平台整合H5WebApp，集成企业微信SDK"><a href="#Android平台整合H5WebApp，集成企业微信SDK" class="headerlink" title="Android平台整合H5WebApp，集成企业微信SDK"></a>Android平台整合H5WebApp，集成企业微信SDK</h1><h3 id="一、整合前准备"><a href="#一、整合前准备" class="headerlink" title="一、整合前准备"></a>一、整合前准备</h3><ol><li><p>下载<a href="https://nativesupport.dcloud.net.cn/AppDocs/download/android">AndroidSDK</a></p></li><li><p><a href="https://work.weixin.qq.com/api/doc/90000/90138/91074">企业微信移动端SDK</a>资源下载，将签名生成工具安装在手机端，之后在获取企业微信登录权限时需要用到。</p><blockquote><p>使用企业微信登录、分享功能需要用到文件如下。<br>点击下载<a href="http://open.work.weixin.qq.com/wwopen/downloadfile/wwapi.zip">Android开发工具包集合</a> 。每个第三方应用必须要导入该SDK库，用于实现与企业微信的通信<br>点击下载 <a href="http://dldir1.qq.com/qqcontacts/Gen_Signature_Android.apk">签名生成工具</a>。安装此工具，根据指引生成的应用签名字符串并填写在应用管理平台上，未填写或者填写错误将导致接口无法使用。<br>点击下载<a href="http://dldir1.qq.com/qqcontacts/apitest_2.zip">接口使用Demo</a>。开发者可以参考Demo中的接口使用方式进行开发。</p></blockquote></li><li><p>必要开发软件自行下载</p><ul><li>Android studio</li><li>Hbuilder</li></ul></li></ol><h3 id="二、导入AndroidDemo"><a href="#二、导入AndroidDemo" class="headerlink" title="二、导入AndroidDemo"></a>二、导入AndroidDemo</h3><ol><li><p>sdk目录         </p><p><img src="https://i.loli.net/2021/01/22/9bTciu8DAyv1kNS.png"> </p></li><li><p>将HBuilder-Hello导入Android Studio，在导入过程中可能会出现各种奇奇怪怪的问题，请自行百度解决，在这里提供一些可能会出现问题的解决方法</p><ul><li><p><strong>Error:Connection timed out: connect. If you are behind an HTTP proxy, please configure the proxy settings either in IDE or Gradle.</strong></p><p>由于网络原因，无法下载gradle，解决办法：</p><p>在项目目录，“<em>\gradle\wrapper\gradle-wrapper.properties</em>”中查看当前项目所需要的gradle版本号，如下所示：gradle的版本为gradle-6.5-all.zip</p><p><code>distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-all.zip</code></p><p>在<a href="https://www.androiddevtools.cn/">androiddevtools</a>中下载对应的gradle包，下载好之后直接丢进”<em>C:\Users\zora\.gradle\wrapper\dists\gradle-6.5-all\&lt;随机生成的字符串&gt;</em>“里面，重新运行Android Studio</p></li><li><p><strong>Error:Cause: failed to find target with hash string ‘android-23’</strong></p><p>缺少对应的SDK文件，解决方法：在Android Studio中打开”File&gt;Settings“,搜索sdk，下载对应的sdk文件，重新rebuild项目。</p></li></ul></li></ol><h3 id="三、整合webApp"><a href="#三、整合webApp" class="headerlink" title="三、整合webApp"></a>三、整合webApp</h3><p>官方离线打包参考链接：<a href="https://nativesupport.dcloud.net.cn/AppDocs/usesdk/android">Android离线打包</a></p><ol><li><p>​    打包H5+APP</p><p>在HBuilder中，打包成本地资源，将资源文件放在HBuilder-Hello的”<em>\app\src\main\assets\apps&lt;webApp对应id，在manifest.json中查看&gt;\www</em>“中，如果没有该文件夹则创建一个www空文件夹。</p><p><img src="https://i.loli.net/2021/01/22/YTknLBd324DbVgN.png">  <img src="https://i.loli.net/2021/01/22/sxlPiqzvEt2OR1d.png"></p></li><li><p>修改dcloud_control.xml中的appid，appid就是在manifest.json文件中定义的id，<strong>与apps下的文件夹同名</strong>。</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hbuilder</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">apps</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">app</span> <span class="attr">appid</span>=<span class="string">"H******E"</span> <span class="attr">appver</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">apps</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hbuilder</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>运行项目</p><p><img src="https://i.loli.net/2021/01/22/GdxfWMEgAlmUY6j.png"></p></li></ol><h3 id="四、整合企业微信SDK"><a href="#四、整合企业微信SDK" class="headerlink" title="四、整合企业微信SDK"></a>四、整合企业微信SDK</h3><p>官方sdk整合链接：<a href="https://work.weixin.qq.com/api/doc/90000/90136/91194">Android接入指南</a></p><ol><li><p>在下载好的企业微信Demo中，将”<em>\apitest_2\apitest\app\libs</em>“中的libwwsdk.jar复制到HBuilder-Hello的libs文件夹中，这样就成功的引入了企业微信sdk</p></li><li><p>进行代码开发，官方给出的代码对与纯Android原生开发的应用是没有问题的！但是，我们是整合了webAPP进行的混合开发！<span class="github-emoji"><span>😢</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><p>这里我找遍全网都没找到解决方法，可能是企业微信集成的需求不大？踩了很多坑，在看了一天的源码之后，摸索出一条解决办法，因为AndroidSDK中是提供了微信、qq等第三方登录接口的，所以我依葫芦画瓢，增加了一个企业微信的登录接口。可以参考<a href="https://ask.dcloud.net.cn/article/66">Android平台第三方插件开发指导</a></p><ul><li><p>在”<em>java\io\dcloud\HelloH5\wxapi</em>“中新建类<strong>QyWeiXinOAuthService.java</strong>继承<strong>BaseOAuthService</strong>，具体代码如下</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> io.dcloud.HelloH5.wxapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"><span class="keyword">import</span> com.tencent.wework.api.IWWAPI;</span><br><span class="line"><span class="keyword">import</span> com.tencent.wework.api.IWWAPIEventHandler;</span><br><span class="line"><span class="keyword">import</span> com.tencent.wework.api.WWAPIFactory;</span><br><span class="line"><span class="keyword">import</span> com.tencent.wework.api.model.BaseMessage;</span><br><span class="line"><span class="keyword">import</span> com.tencent.wework.api.model.WWAuthMessage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.json.JSONArray;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONException;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.dcloud.common.DHInterface.IWebview;</span><br><span class="line"><span class="keyword">import</span> io.dcloud.common.adapter.util.AndroidResources;</span><br><span class="line"><span class="keyword">import</span> io.dcloud.common.adapter.util.Logger;</span><br><span class="line"><span class="keyword">import</span> io.dcloud.common.adapter.util.PlatformUtil;</span><br><span class="line"><span class="keyword">import</span> io.dcloud.common.constant.DOMException;</span><br><span class="line"><span class="keyword">import</span> io.dcloud.common.util.JSUtil;</span><br><span class="line"><span class="keyword">import</span> io.dcloud.common.util.StringUtil;</span><br><span class="line"><span class="keyword">import</span> io.dcloud.common.util.ThreadPool;</span><br><span class="line"><span class="keyword">import</span> io.dcloud.feature.oauth.BaseOAuthService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QyWeiXinOAuthService</span> <span class="keyword">extends</span> <span class="title class_">BaseOAuthService</span> {</span><br><span class="line">    <span class="keyword">private</span> IWWAPI iwwapi;<span class="comment">//企业微信api</span></span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">"QyWeiXinOAuthService"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SCHEMA</span> <span class="operator">=</span> <span class="string">"wwauth***********000006"</span>;<span class="comment">//企业微信授权登录中的SCHEMA，获取方法请参考步骤六</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">appId</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">agentId</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">isAuth</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">QyWeiXinOAuthService</span><span class="params">()</span>{</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasFullConfigData</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> !TextUtils.isEmpty(appId);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initAuthOptions</span><span class="params">(JSONObject mLoginOptions)</span> {</span><br><span class="line">        <span class="keyword">if</span> (mLoginOptions != <span class="literal">null</span>) {</span><br><span class="line">            appId = mLoginOptions.optString(<span class="string">"appid"</span>, appId);</span><br><span class="line">            Logger.e(<span class="string">"QyWeiXinOAuthService"</span>, <span class="string">"initAuthOptions: appId"</span> + appId);</span><br><span class="line">            agentId = mLoginOptions.optString(<span class="string">"agentId"</span>, agentId);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initMetaData</span><span class="params">()</span> {</span><br><span class="line">        appId = AndroidResources.getMetaValue(<span class="string">"QYWX_APPID"</span>);</span><br><span class="line">        agentId = AndroidResources.getMetaValue(<span class="string">"QYWX_AGENTID"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(Context context)</span> {</span><br><span class="line">        <span class="built_in">super</span>.init(context);</span><br><span class="line">        <span class="built_in">this</span>.id = <span class="string">"qyweixin"</span>;</span><br><span class="line">        <span class="built_in">this</span>.description = <span class="string">"企业微信"</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">onLoginCallBack</span><span class="params">(IWebview pWebViewImpl, String pCallbackId, <span class="type">int</span> code)</span> {</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">suc</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">errorMsg</span> <span class="operator">=</span> <span class="string">"send"</span>;</span><br><span class="line">        <span class="keyword">if</span> (code == WWAuthMessage.ERR_OK) {</span><br><span class="line">            suc = <span class="literal">true</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (code == WWAuthMessage.ERR_FAIL) {</span><br><span class="line">            errorMsg = <span class="string">"登录失败"</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (code == WWAuthMessage.ERR_CANCEL) {</span><br><span class="line">            <span class="built_in">this</span>.onLoginFinished(<span class="built_in">this</span>.getErrorJsonbject(-<span class="number">2</span>, <span class="string">"用户取消"</span>), <span class="literal">false</span>, pWebViewImpl, pCallbackId);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (suc) {</span><br><span class="line">            JSUtil.execCallback(pWebViewImpl, pCallbackId, <span class="built_in">this</span>.makeResultJSONObject(), JSUtil.OK, <span class="literal">false</span>);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> DOMException.toJSON(-<span class="number">100</span>, errorMsg, code);</span><br><span class="line">            JSUtil.execCallback(pWebViewImpl, pCallbackId, msg, JSUtil.ERROR, <span class="literal">true</span>, <span class="literal">false</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">(IWebview pWebViewImpl, JSONArray pJsArgs)</span> {</span><br><span class="line">        <span class="built_in">super</span>.login(pWebViewImpl, pJsArgs);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">this</span>.hasGeneralError(<span class="built_in">this</span>.mLoginWebViewImpl, <span class="built_in">this</span>.mLoginCallbackId)) {</span><br><span class="line">            <span class="keyword">if</span> (!PlatformUtil.isAppInstalled(pWebViewImpl.getContext(), <span class="string">"com.tencent.wework"</span>)) {</span><br><span class="line">                <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> StringUtil.format(<span class="string">"{code:%d,message:'%s'}"</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]{-<span class="number">8</span>, DOMException.toString(<span class="string">"客户端未安装"</span>)});</span><br><span class="line">                JSUtil.execCallback(pWebViewImpl, <span class="built_in">this</span>.mLoginCallbackId, msg, JSUtil.ERROR, <span class="literal">true</span>, <span class="literal">false</span>);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                ThreadPool.self().addThreadTask(<span class="keyword">new</span> <span class="title class_">Runnable</span>() {</span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> {</span><br><span class="line">                        QyWeiXinOAuthService.<span class="built_in">this</span>.loginInThread(QyWeiXinOAuthService.<span class="built_in">this</span>.mLoginWebViewImpl, QyWeiXinOAuthService.<span class="built_in">this</span>.mLoginCallbackId, QyWeiXinOAuthService.<span class="built_in">this</span>.mLoginOptions);</span><br><span class="line">                    }</span><br><span class="line">                });</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">authorize</span><span class="params">(IWebview pwebview, JSONArray pJsArgs)</span> {</span><br><span class="line">        <span class="built_in">super</span>.authorize(pwebview, pJsArgs);</span><br><span class="line">        String msg;</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(appId)) {</span><br><span class="line">            msg = StringUtil.format(<span class="string">"{code:%d,message:'%s'}"</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]{-<span class="number">7</span>, DOMException.toString(<span class="string">"业务参数配置缺失"</span>)});</span><br><span class="line">            JSUtil.execCallback(pwebview, <span class="built_in">this</span>.mAuthCallbackId, msg, JSUtil.ERROR, <span class="literal">true</span>, <span class="literal">false</span>);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (!PlatformUtil.isAppInstalled(pwebview.getContext(), <span class="string">"com.tencent.wework"</span>)) {</span><br><span class="line">            msg = StringUtil.format(<span class="string">"{code:%d,message:'%s'}"</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]{-<span class="number">8</span>, DOMException.toString(<span class="string">"客户端未安装"</span>)});</span><br><span class="line">            JSUtil.execCallback(pwebview, <span class="built_in">this</span>.mAuthCallbackId, msg, JSUtil.ERROR, <span class="literal">true</span>, <span class="literal">false</span>);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            ThreadPool.self().addThreadTask(<span class="keyword">new</span> <span class="title class_">Runnable</span>() {</span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> {</span><br><span class="line">                    QyWeiXinOAuthService.<span class="built_in">this</span>.isAuth = <span class="literal">true</span>;</span><br><span class="line">                    QyWeiXinOAuthService.<span class="built_in">this</span>.loginInThread(QyWeiXinOAuthService.<span class="built_in">this</span>.mAuthWebview, QyWeiXinOAuthService.<span class="built_in">this</span>.mAuthCallbackId, QyWeiXinOAuthService.<span class="built_in">this</span>.mAuthOptions);</span><br><span class="line">                }</span><br><span class="line">            });</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loginInThread</span><span class="params">(<span class="keyword">final</span> IWebview pwebview, <span class="keyword">final</span> String callbackId, JSONObject option)</span> {</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.iwwapi == <span class="literal">null</span>) {</span><br><span class="line">            <span class="comment">//注册</span></span><br><span class="line">            <span class="built_in">this</span>.iwwapi = WWAPIFactory.createWWAPI(pwebview.getActivity());</span><br><span class="line">            <span class="built_in">this</span>.iwwapi.registerApp(SCHEMA);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">final</span> WWAuthMessage.<span class="type">Req</span> <span class="variable">req</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WWAuthMessage</span>.Req();</span><br><span class="line">        req.sch = SCHEMA;</span><br><span class="line">        req.appId = appId;</span><br><span class="line">        req.agentId = agentId;</span><br><span class="line">        req.state = <span class="string">"combest"</span>;</span><br><span class="line"><span class="comment">//授权成功之后的回调函数</span></span><br><span class="line">        iwwapi.sendMessage(req, <span class="keyword">new</span> <span class="title class_">IWWAPIEventHandler</span>() {</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleResp</span><span class="params">(BaseMessage resp)</span> {</span><br><span class="line">                <span class="keyword">if</span> (resp <span class="keyword">instanceof</span> WWAuthMessage.Resp) {</span><br><span class="line">                    WWAuthMessage.<span class="type">Resp</span> <span class="variable">rsp</span> <span class="operator">=</span> (WWAuthMessage.Resp) resp;</span><br><span class="line">                    <span class="keyword">if</span> (rsp.errCode == WWAuthMessage.ERR_CANCEL) {</span><br><span class="line">                        Toast.makeText(pwebview.getContext(), <span class="string">"登陆取消"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                    }<span class="keyword">else</span> <span class="keyword">if</span> (rsp.errCode == WWAuthMessage.ERR_FAIL) {</span><br><span class="line">                        Toast.makeText(pwebview.getContext(), <span class="string">"登陆失败"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                    } <span class="keyword">else</span> <span class="keyword">if</span> (rsp.errCode == WWAuthMessage.ERR_OK) {</span><br><span class="line">                        Toast.makeText(pwebview.getContext(), <span class="string">"登陆成功"</span>,</span><br><span class="line">                                Toast.LENGTH_SHORT).show();</span><br><span class="line">                        QyWeiXinOAuthService.<span class="built_in">this</span>.code = rsp.code;</span><br><span class="line">                        JSUtil.execCallback(pwebview, callbackId, QyWeiXinOAuthService.<span class="built_in">this</span>.makeResultJSONObject(rsp.code), JSUtil.OK, <span class="literal">false</span>);</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onLoginFinished</span><span class="params">(JSONObject msg, <span class="type">boolean</span> suc, IWebview pwebview, String callbackId)</span> {</span><br><span class="line">        JSUtil.execCallback(pwebview, callbackId, msg, suc ? JSUtil.OK : JSUtil.ERROR, <span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.isAuth) {</span><br><span class="line">            <span class="built_in">this</span>.mAuthWebview = <span class="literal">null</span>;</span><br><span class="line">            <span class="built_in">this</span>.mAuthCallbackId = <span class="literal">null</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="built_in">this</span>.mLoginCallbackId = <span class="literal">null</span>;</span><br><span class="line">            <span class="built_in">this</span>.mLoginWebViewImpl = <span class="literal">null</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logout</span><span class="params">(IWebview pWebViewImpl, JSONArray pJsArgs)</span> {</span><br><span class="line">        <span class="built_in">super</span>.logout(pWebViewImpl, pJsArgs);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">this</span>.hasGeneralError(<span class="built_in">this</span>.mLogoutWebViewImpl, <span class="built_in">this</span>.mLogoutCallbackId)) {</span><br><span class="line">            <span class="built_in">this</span>.removeToken();</span><br><span class="line">            <span class="built_in">this</span>.userInfo = <span class="literal">null</span>;</span><br><span class="line">            <span class="built_in">this</span>.authResult = <span class="literal">null</span>;</span><br><span class="line">            <span class="built_in">this</span>.onLogoutFinished(<span class="built_in">this</span>.makeResultJSONObject(), <span class="literal">true</span>);</span><br><span class="line">            <span class="built_in">this</span>.iwwapi = <span class="literal">null</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> JSONObject <span class="title function_">makeResultJSONObject</span><span class="params">()</span> {</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">sucJSON</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            sucJSON.put(<span class="string">"authResult"</span>, <span class="built_in">this</span>.authResult);</span><br><span class="line">            <span class="type">String</span> <span class="variable">state</span> <span class="operator">=</span> <span class="built_in">this</span>.getValue(<span class="string">"state"</span>);</span><br><span class="line">            sucJSON.put(<span class="string">"state"</span>, state);</span><br><span class="line">            sucJSON.put(<span class="string">"code"</span>, <span class="built_in">this</span>.code);</span><br><span class="line">        } <span class="keyword">catch</span> (JSONException var3) {</span><br><span class="line">            var3.printStackTrace();</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sucJSON;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> JSONObject <span class="title function_">makeResultJSONObject</span><span class="params">(String code)</span> {</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">sucJSON</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="type">String</span> <span class="variable">state</span> <span class="operator">=</span> <span class="built_in">this</span>.getValue(<span class="string">"state"</span>);</span><br><span class="line">            sucJSON.put(<span class="string">"state"</span>, state);</span><br><span class="line">            sucJSON.put(<span class="string">"authResult"</span>, code);</span><br><span class="line">        } <span class="keyword">catch</span> (JSONException var3) {</span><br><span class="line">            var3.printStackTrace();</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sucJSON;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li><li><p>在dcloud_properties.xml文件中，搜索OAuth，在name=”OAuth”的<code>&lt;feature&gt;</code>中添加一行<code>&lt;module&gt;</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">feature</span> <span class="attr">name</span>=<span class="string">"OAuth"</span> <span class="attr">value</span>=<span class="string">"io.dcloud.feature.oauth.OAuthFeatureImpl"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span> <span class="attr">name</span>=<span class="string">"OAuth-Weixin"</span> <span class="attr">value</span>=<span class="string">"io.dcloud.feature.oauth.weixin.WeiXinOAuthService"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span> <span class="attr">name</span>=<span class="string">"OAuth-QQ"</span> <span class="attr">value</span>=<span class="string">"io.dcloud.feature.oauth.qq.QQOAuthService"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span> <span class="attr">name</span>=<span class="string">"OAuth-Sina"</span> <span class="attr">value</span>=<span class="string">"io.dcloud.feature.oauth.sina.SinaOAuthService"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span> <span class="attr">name</span>=<span class="string">"OAuth-Qihoo"</span> <span class="attr">value</span>=<span class="string">"io.dcloud.oauth.qihoo.QihooOAuthService"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span> <span class="attr">name</span>=<span class="string">"OAuth-MiUi"</span> <span class="attr">value</span>=<span class="string">"io.dcloud.feature.oauth.miui.MiUiOAuthService"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span> <span class="attr">name</span>=<span class="string">"OAuth-QyWeixin"</span> <span class="attr">value</span>=<span class="string">"io.dcloud.HelloH5.wxapi.QyWeiXinOAuthService"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">feature</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>在AndroidManifest.xml文件中，添加企业微信appid和agentid的定义</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">"QYWX_APPID"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:value</span>=<span class="string">"ww**********cfae"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">           <span class="attr">android:name</span>=<span class="string">"QYWX_AGENTID"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">android:value</span>=<span class="string">"1000006"</span> /&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ul></li></ol><h3 id="五、关键！webAPP与Android之间的通信，传递参数"><a href="#五、关键！webAPP与Android之间的通信，传递参数" class="headerlink" title="五、关键！webAPP与Android之间的通信，传递参数"></a>五、<span style="color:red">关键！</span>webAPP与Android之间的通信，传递参数</h3><ol><li><h4 id="webAPP端"><a href="#webAPP端" class="headerlink" title="webAPP端"></a>webAPP端</h4><p>接口说明链接：<a href="http://www.html5plus.org/doc/zh_cn/oauth.html#plus.oauth.getServices">OAuth模块</a></p><p>如果你也是和我一样用Vue开发的APP，可以这样写</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> instance = <span class="variable language_">this</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable language_">window</span>.<span class="property">plus</span>) <span class="keyword">return</span>;</span><br><span class="line">plus.<span class="property">oauth</span>.<span class="title function_">getServices</span>(<span class="keyword">function</span>(<span class="params">services</span>){</span><br><span class="line"><span class="keyword">var</span> qyweixin;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> services){</span><br><span class="line">        <span class="keyword">var</span> service=services[i];</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(service));</span><br><span class="line">            <span class="keyword">if</span>(service.<span class="property">id</span> == <span class="string">"qyweixin"</span>){</span><br><span class="line">                qyweixin = service;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(qyweixin){</span><br><span class="line">        qyweixin.<span class="title function_">login</span>(<span class="keyword">function</span>(<span class="params"></span>){</span><br><span class="line">            <span class="comment">// Toast(JSON.stringify(qyweixin.authResult));</span></span><br><span class="line">            instance.<span class="title function_">getUserInfo</span>(qyweixin.<span class="property">authResult</span>);<span class="comment">//根据code和access_token获取用户信息</span></span><br><span class="line">            },<span class="keyword">function</span>(<span class="params">e</span>){</span><br><span class="line">            plus.<span class="property">nativeUI</span>.<span class="title function_">alert</span>(<span class="string">"详情错误信息请参考授权登录(OAuth)规范文档：http://www.html5plus.org/#specification#/specification/OAuth.html"</span>,<span class="literal">null</span>,<span class="string">"登录失败["</span>+e.<span class="property">code</span>+<span class="string">"]："</span>+e.<span class="property">message</span>);</span><br><span class="line">            });</span><br><span class="line">    }</span><br><span class="line">    },<span class="keyword">function</span>(<span class="params">e</span>){</span><br><span class="line">    <span class="title class_">Toast</span>(<span class="string">'获取登录认证失败：'</span>+e.<span class="property">message</span>);</span><br><span class="line">    });</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="Android端"><a href="#Android端" class="headerlink" title="Android端"></a>Android端</h4><p><strong>同步执行方法：</strong>JSUtil.wrapJsVar(“Html5 Plus Plugin Hello1!”,true);</p><blockquote><p><code>String wrapJsVar(String value, boolean isString);</code></p><p>转换JS层的返回值，也用于异步接口中回调函数的参数。</p><p><strong>参数说明：</strong><br><strong>value：</strong> 要返回到JS层的值<br><strong>isString：</strong>返回值类型是否为原始字符串<br><strong>返回方法：</strong><br><strong>boolea类型：</strong> wrapJSVar( “true”, false );<br><strong>Number类型：</strong> wrapJsVar( “99”, false );<br><strong>String类型：</strong> wrapJsVar( “hello”, true );<br><strong>数组类型：</strong> wrapJsVar( “[1,2,3,4,5]”, false );<br><strong>JSON类型：</strong> wrapJsVar( “{‘name’:’value’}”, false );</p></blockquote><p><strong>异步执行方法：</strong>JSUtil.execCallback(pWebview , pCallbackId, msg, JSUtil.ERROR, true, false);</p><blockquote><p><code>String execCallback(IWebview pWebView, String pCallbackId, String pMessage, int pStatus, boolean isJson, boolean pKeepCallback);</code></p><p>触发扩展插件中的回调方法。</p><p><strong>参数说明：</strong><br><strong>pWebView：</strong>扩展插件方法运行的窗口<br><strong>pCallbackId：</strong>回调函数的唯一标识<br><strong>pMessage：</strong>回调函数的参数<br><strong>pStatus：</strong>操作是否成功，成功则使用JSUtil.OK，否则使用错误代码<br><strong>isJson：</strong>回调函数参数是否为JSON数据<br><strong>pKeepCallback：</strong>是否可多次触发回调函数</p></blockquote></li><li><h4 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h4><p>根据得到的code获取企业微信的userInfo，这里用到了<a href="https://gitee.com/binary/weixin-java-tools">WxJava</a>，具体整合方法这里就不再过多的叙述了，具体可以查看文档<a href="https://github.com/Wechat-Group/WxJava/wiki/%E4%BC%81%E4%B8%9A%E5%8F%B7%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3">企业号开发文档</a>，java代码如下：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">accessToken</span> <span class="operator">=</span> <span class="string">""</span>;</span><br><span class="line"><span class="type">WxCpDefaultConfigImpl</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WxCpDefaultConfigImpl</span>();</span><br><span class="line">config.setCorpId(<span class="string">"ww*********fae"</span>);      <span class="comment">// 设置微信企业号的appid</span></span><br><span class="line">config.setCorpSecret(<span class="string">"lv**********************fu1S02c0"</span>);  <span class="comment">// 设置微信企业号的app corpSecret</span></span><br><span class="line">config.setAgentId(<span class="number">1000006</span>);     <span class="comment">// 设置微信企业号应用ID</span></span><br><span class="line"><span class="type">WxCpServiceImpl</span> <span class="variable">wxCpService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WxCpServiceImpl</span>();</span><br><span class="line">wxCpService.setWxCpConfigStorage(config);</span><br><span class="line">accessToken = wxCpService.getAccessToken();</span><br><span class="line"><span class="type">WxCpOauth2UserInfo</span> <span class="variable">res</span> <span class="operator">=</span>  wxCpService.getOauth2Service().getUserInfo(code);</span><br><span class="line"><span class="comment">//根据userId获取详细信息</span></span><br><span class="line"><span class="type">WxCpUser</span> <span class="variable">weChatUser</span> <span class="operator">=</span> wxCpService.getUserService().getById(res.getUserId());</span><br></pre></td></tr></tbody></table></figure></li></ol><h3 id="六、在企业微信企业管理后台中进行配置"><a href="#六、在企业微信企业管理后台中进行配置" class="headerlink" title="六、在企业微信企业管理后台中进行配置"></a>六、在企业微信企业管理后台中进行配置</h3><ol><li><p>在自建应用中，启用企业微信授权登录</p><p><img src="https://i.loli.net/2021/01/22/ErJeIFib5ORQa7L.png"> </p></li><li><p>还记得我们在第一步，手机端下载的生成签名的APP吗，这里就需要用到它了，在HBuilder-Hello项目的AndroidManifest.xml文件中可以查看到当前项目的包名</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">"io.dcloud.HelloH5"</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>在APP中输入包名，得到签名回填到企业微信管理后台</p><p><img src="https://i.loli.net/2021/01/22/AC34EVwWPgMl6bp.png"> </p><hr><p>至此，整个过程就完美结束啦~​ <span class="github-emoji"><span>💮</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ae.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> WebApp </tag>
            
            <tag> 企业微信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毕业季</title>
      <link href="/2020/10/01/bi-ye-ji/"/>
      <url>/2020/10/01/bi-ye-ji/</url>
      
        <content type="html"><![CDATA[<h3 id="在广袤的空间和无限的时间中-能与你们共享一颗行星和同一段时光-是我的荣幸"><a href="#在广袤的空间和无限的时间中-能与你们共享一颗行星和同一段时光-是我的荣幸" class="headerlink" title="在广袤的空间和无限的时间中,能与你们共享一颗行星和同一段时光,是我的荣幸"></a><strong><font color="#996699">在广袤的空间和无限的时间中,能与你们共享一颗行星和同一段时光,是我的荣幸</font></strong></h3><hr><p><img src="https://raw.githubusercontent.com/Zoracxz/Random-img/master/house.jpg" alt="love &amp; peace"></p><h2 id="我们想说的话"><a href="#我们想说的话" class="headerlink" title="我们想说的话"></a>我们想说的话</h2><p>黄 🐕：</p><blockquote><p>我总是说要去娟（我的锤子）家里，去吃她家的鸽子（虽然她不让我吃，但谁又 care 呢）去看她家的梯田，去感受一下在这样一个热情热烈的家庭里有多么的舒心幸福。可是都毕业了我还是没去成。</p></blockquote><hr><blockquote><p>总是答应丽珍（我的犬儿子）要和她去日本，去长白山，去西宁，去遍所有地方玩，要带她来北海吃粉（但是不许她住我家，让她去流浪）带她去涠洲岛玩。可是到最后毕业了，我还是骗了她哈哈哈哈哈哈。</p></blockquote><hr><blockquote><p>总是说要在猪哥（我的 BABA）还在日本读书的时候去日本，和丽珍一起找她玩，住她的宿舍睡她的床占用她的时间陪我们玩（都是丽珍说的，丽珍赖皮天下无敌）。可是到猪哥回长沙了我还是没去成，又让丽珍狗儿子一个人去了哈哈哈哈哈哈哈。</p></blockquote><hr><blockquote><p>遗憾这两天没有回去和她们一起度过最后这些打闹的时间，想到以后不会再听到丽珍独特的大嗓门，姨妈痛时哭天撼地的声音，委屈的说我们不关心她哈哈哈，再不会有人深更半夜掀我床帘了，再也不能跑到丽珍床上揍她了，再也不能深更半夜在亚娟的床底下桌子上用她的电脑写作业，再也不能跟亚娟一起出去逛理工北门了，再也不能调侃亚娟那些哥哥们了，再也不能看到亚娟整天徘徊在我的衣服包包旁边那暗示的眼神，如果能重来一次我一定会告诉你！&nbsp; 休想碰！再也不能让猪哥介绍日本小哥哥给我（其实是亚娟）认识了，再也不能让猪哥给我考试前临时抱佛脚了，再也不能吃到猪哥从家里带来的辣条和酱板鸭了，再也不能吃到猪哥做的辣椒炒肉（我的最爱）了！！！！<br> 离开了她们我真的好伤心，以后路上再也没有人给我搭肩膀了（虽然我都开小电驴），我再也不能在宿舍一挑二把猪和狗干趴下了哈哈哈哈哈哈（小意思小意思，不用夸我），再也不能在床上使唤她们帮我拿东西了（床上生根了没办法），再也不能在亚娟电脑上我的专属文件夹里增加属于我的东西了（在亚娟的电脑里我的专属文件夹大概也就占一半内存吧哈哈哈哈哈），再也不能挤在同一个地方看剧（明明自己的手机也能看），再也不能一个宿舍下飞行棋，让我成为最后的王者（她们都不如我，玩的真没意思），再也不能和她们一起出去吃饭了（真的只是吃饭，我们宿舍的活动你们不懂），最重要的是，再也不能在同一片天空下住在同一个宿舍呼吸着同一处空气做着属于我们的美梦了，即使听着丽珍的呼噜声也是美的（或许吧），将来的我们会是什么样子的，我想象不出来，我们都是有无限可能的，是最美好的自己，是彼此道路上冉冉升起的新星，是一段不可磨灭的独一无二的美好的记忆。<br>我们，就是我们，是我最爱的我们！<br>我想不到花里胡哨的祝福，只希望我们都<strong>万事顺遂，毫无蹉跎。</strong><br>我的狗儿子们你们要加油！要悄悄的拔尖懂吗！<br><br><br><br><img src="https://github.com/Zoracxz/Random-img/raw/master/line.png" alt="我是分割线"></p></blockquote><p>娟：</p><blockquote><p><strong><font color="#FF9966">在夏天遇见的就在夏天告别吧</font></strong></p><blockquote><p><a href="https://mp.weixin.qq.com/s/kkCKPbjUSPDm0gHAGDeJGQ"><font color="#99CC99">この夏</font></a></p></blockquote></blockquote><p><img src="https://github.com/Zoracxz/Random-img/raw/master/start.jpg" alt="银河"><br>我很庆幸在最美好的时间里遇到你们，希望我们未来都越来越好。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
